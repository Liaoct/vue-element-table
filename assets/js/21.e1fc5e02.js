(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{339:function(e,t,r){"use strict";r.r(t);var a=r(1),v=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),r("p",[e._v("同"),r("code",[e._v("el-table")]),e._v("一样，我们通过"),r("code",[e._v("data")]),e._v("属性为"),r("code",[e._v("ve-element-table")]),e._v("传入数据，并通过"),r("a",{attrs:{href:"http://element-cn.eleme.io/2.0/#/zh-CN/component/table",target:"_blank",rel:"noopener noreferrer"}},[e._v("el-table-column"),r("OutboundLink")],1),e._v("来定义表格的列。")]),e._v(" "),r("p",[e._v("实际上，"),r("code",[e._v("data")]),e._v("属性最终传给了内置的"),r("code",[e._v("el-table")]),e._v("组件，所有的"),r("code",[e._v("el-table-column")]),e._v("也同样的被作为默认插槽传给了"),r("code",[e._v("el-table")]),e._v("组件。\n关于如何利用"),r("code",[e._v("data")]),e._v("属性和"),r("code",[e._v("el-table-column")]),e._v("去渲染表格，请参考"),r("a",{attrs:{href:"http://element-cn.eleme.io/2.0/#/zh-CN/component/table",target:"_blank",rel:"noopener noreferrer"}},[e._v("el-table"),r("OutboundLink")],1),e._v("文档。")]),e._v(" "),r("ClientOnly",[r("CodeExample",{attrs:{title:"基础表格",description:"同原生`el-table`组件使用方式一样，创建带有分页器的基础表格。默认分页器的`currentPage`为`1`，`pageSize`为`10`。"}},[r("TableColumn",{attrs:{slot:"example"},slot:"example"}),e._v(" "),r("div",{staticClass:"markdown-it-container__title"},[r("p",[e._v("同"),r("code",[e._v("el-table")]),e._v("一样，通过"),r("code",[e._v("data")]),e._v("属性为"),r("code",[e._v("ve-table")]),e._v("传入数据，并通过"),r("code",[e._v("el-table-column")]),e._v("来定义表格的列。")])]),r("div",{staticClass:"markdown-it-container__content"},[e._v("<template>"),r("br"),e._v('    <ve-table :data="tableData">'),r("br"),e._v('        <el-table-column prop="date" label="日期" width="180"></el-table-column>'),r("br"),e._v('        <el-table-column prop="name" label="姓名" width="180"></el-table-column>'),r("br"),e._v('        <el-table-column prop="address" label="地址"></el-table-column>'),r("br"),e._v("    </ve-table>"),r("br"),e._v("</template>"),r("br"),r("br"),e._v("<script>"),r("br"),e._v("    import Mock from 'mockjs';"),r("br"),r("br"),e._v("    export default {"),r("br"),e._v("        data() {"),r("br"),e._v("            return {"),r("br"),e._v("                tableData: (() =>"),r("br"),e._v("                    {"),r("br"),e._v("                        const data = [];"),r("br"),e._v("                        for (let i = 0; i < 50; i++) {"),r("br"),e._v("                            data.push(Mock.mock({"),r("br"),e._v("                                date: '@date',"),r("br"),e._v("                                name: '@cname',"),r("br"),e._v("                                address: '@county(true)'"),r("br"),e._v("                            }))"),r("br"),e._v("                        }"),r("br"),e._v("                        return data;"),r("br"),e._v("                    }"),r("br"),e._v("                )()"),r("br"),e._v("            }"),r("br"),e._v("        }"),r("br"),e._v("    }"),r("br"),e._v("<\/script>"),r("br")])],1),e._v(" "),r("CodeExample",{attrs:{title:"快速生成列",description:"使用`columns`属性，快速创建数据列。渲染结果与上面相同。"}},[r("BaseTable",{attrs:{slot:"example"},slot:"example"}),e._v(" "),r("div",{staticClass:"markdown-it-container__title"},[r("p",[e._v("可以"),r("code",[e._v("columns")]),e._v("对象数组快速创建数据列。数组中的每个对象都代表一个"),r("code",[e._v("el-table-column")]),e._v("，每个键值对都可以是"),r("code",[e._v("el-table-column")]),e._v("任意\n合法的属性对。")])]),r("div",{staticClass:"markdown-it-container__content"},[e._v("<template>"),r("br"),e._v('    <ve-table :data="tableData" :columns="columns"></ve-table>'),r("br"),e._v("</template>"),r("br"),r("br"),e._v("<script>"),r("br"),e._v("    import Mock from 'mockjs';"),r("br"),r("br"),e._v("    export default {"),r("br"),e._v("        data() {"),r("br"),e._v("            return {"),r("br"),e._v("                tableData: (() =>"),r("br"),e._v("                    {"),r("br"),e._v("                        const data = [];"),r("br"),e._v("                        for (let i = 0; i < 50; i++) {"),r("br"),e._v("                            data.push(Mock.mock({"),r("br"),e._v("                                date: '@date',"),r("br"),e._v("                                name: '@cname',"),r("br"),e._v("                                address: '@county(true)'"),r("br"),e._v("                            }))"),r("br"),e._v("                        }"),r("br"),e._v("                        return data;"),r("br"),e._v("                    }"),r("br"),e._v("                )(),"),r("br"),e._v("                columns: ["),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'date',"),r("br"),e._v("                        label: '日期',"),r("br"),e._v("                        width: 180"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'name',"),r("br"),e._v("                        label: '姓名',"),r("br"),e._v("                        width: 180"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'address',"),r("br"),e._v("                        label: '地址',"),r("br"),e._v("                    }"),r("br"),e._v("                ]"),r("br"),e._v("            }"),r("br"),e._v("        }"),r("br"),e._v("    }"),r("br"),e._v("<\/script>"),r("br")])],1)],1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),r("ClientOnly",[r("CodeExample",{attrs:{title:"带请求功能的表格",description:"通过`http-request`传入请求函数，使用`props-map`属性指定要显示的数据。"}},[r("HttpTable",{attrs:{slot:"example"},slot:"example"}),e._v(" "),r("div",{staticClass:"markdown-it-container__title"},[r("p",[r("code",[e._v("http-request")]),e._v("函数会在表格开始渲染时执行，切换分页时也会自动执行。"),r("code",[e._v("http-request")]),e._v("函数的第一个参数为当前的分页对象。\n"),r("code",[e._v("http-request")]),e._v("函数需要返回一个Promise，请求返回的数据可以是数组，也可以是对象。当返回对象时，需要使用"),r("code",[e._v("props-map")]),e._v("指定"),r("code",[e._v("data")]),e._v("和"),r("code",[e._v("total")]),e._v("；\n返回数组时，"),r("code",[e._v("total")]),e._v("需要通过的"),r("code",[e._v("ve-table-sync")]),e._v("的"),r("code",[e._v("props")]),e._v("传入，以便分页器显示正确。")])]),r("div",{staticClass:"markdown-it-container__content"},[e._v("<template>"),r("br"),e._v('    <ve-table-sync :columns="columns" :http-request="requestData" :props-map="propsMap"></ve-table-sync>'),r("br"),e._v("</template>"),r("br"),r("br"),e._v("<script>"),r("br"),e._v("    import Mock from 'mockjs';"),r("br"),r("br"),e._v("    export default {"),r("br"),e._v("        data() {"),r("br"),e._v("            return {"),r("br"),e._v("                columns: ["),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'date',"),r("br"),e._v("                        label: '日期',"),r("br"),e._v("                        width: 180"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'name',"),r("br"),e._v("                        label: '姓名',"),r("br"),e._v("                        width: 180"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'address',"),r("br"),e._v("                        label: '地址',"),r("br"),e._v("                    }"),r("br"),e._v("                ],"),r("br"),e._v("                propsMap: {"),r("br"),e._v("                    data: 'data',"),r("br"),e._v("                    total: 'total'"),r("br"),e._v("                }"),r("br"),e._v("            };"),r("br"),e._v("        },"),r("br"),e._v("        methods: {"),r("br"),e._v("            requestData({ pageSize, currentPage }) {"),r("br"),e._v("                return new Promise((resolve) => {"),r("br"),e._v("                    const data = [];"),r("br"),e._v("                    for (let i = 0; i < pageSize; i++) {"),r("br"),e._v("                        data.push(Mock.mock({"),r("br"),e._v("                            date: '@date',"),r("br"),e._v("                            name: '@cname',"),r("br"),e._v("                            address: '@county(true)'"),r("br"),e._v("                        }))"),r("br"),e._v("                    }"),r("br"),e._v("                    resolve(Mock.mock({"),r("br"),e._v("                        pageSize,"),r("br"),e._v("                        currentPage,"),r("br"),e._v("                        total: '@natural(1, 100)',"),r("br"),e._v("                        data"),r("br"),e._v("                    }))"),r("br"),e._v("                })"),r("br"),e._v("            }"),r("br"),e._v("        }"),r("br"),e._v("    }"),r("br"),e._v("<\/script>"),r("br")])],1)],1),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),r("p",[r("code",[e._v("ve-element-table")]),e._v("只是"),r("code",[e._v("el-table")]),e._v("的高阶组件，因此它完全代理了"),r("code",[e._v("el-table")]),e._v("的所有属性与方法。你仍然可以先使用"),r("a",{attrs:{href:"http://element-cn.eleme.io/2.0/#/zh-CN/component/table",target:"_blank",rel:"noopener noreferrer"}},[e._v("el-table"),r("OutboundLink")],1),e._v("一样使用"),r("code",[e._v("ve-element-table")]),e._v("。")]),e._v(" "),r("ClientOnly",[r("CodeExample",{attrs:{title:"传递prop",description:"像使用`el-table`一样使用`ve-element-table`，例如设置`stripe`和`border`，监听`selection-change`事件。"}},[r("ElTableDemo",{attrs:{slot:"example"},slot:"example"}),e._v(" "),r("div",{staticClass:"markdown-it-container__title"}),r("div",{staticClass:"markdown-it-container__content"},[e._v("<template>"),r("br"),e._v("    <ve-table"),r("br"),e._v('        ref="multipleTable"'),r("br"),e._v('        :data="tableData"'),r("br"),e._v('        :columns="columns"'),r("br"),e._v('        tooltip-effect="dark"'),r("br"),e._v('        style="width: 100%"'),r("br"),e._v('        @selection-change="handleSelectionChange"'),r("br"),e._v("        stripe border>"),r("br"),e._v('        <div style="margin-bottom: 20px" slot="tool">'),r("br"),e._v('            <el-button @click="toggleSelection([tableData[1], tableData[2]])">'),r("br"),e._v("                切换第二、第三行的选中状态"),r("br"),e._v("            </el-button>"),r("br"),e._v('            <el-button @click="toggleSelection()">取消选择</el-button>'),r("br"),e._v("        </div>"),r("br"),e._v("    </ve-table>"),r("br"),e._v("</template>"),r("br"),r("br"),e._v("<script>"),r("br"),e._v("    import Mock from 'mockjs';"),r("br"),r("br"),e._v("    export default {"),r("br"),e._v("        data() {"),r("br"),e._v("            return {"),r("br"),e._v("                multipleSelection: [],"),r("br"),e._v("                tableData: (() =>"),r("br"),e._v("                    {"),r("br"),e._v("                        const data = [];"),r("br"),e._v("                        for (let i = 0; i < 50; i++) {"),r("br"),e._v("                            data.push(Mock.mock({"),r("br"),e._v("                                date: '@date',"),r("br"),e._v("                                name: '@cname',"),r("br"),e._v("                                address: '@county(true)'"),r("br"),e._v("                            }))"),r("br"),e._v("                        }"),r("br"),e._v("                        return data;"),r("br"),e._v("                    }"),r("br"),e._v("                )(),"),r("br"),e._v("                columns: ["),r("br"),e._v("                    {"),r("br"),e._v("                        type: 'selection',"),r("br"),e._v("                        width: 55"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'date',"),r("br"),e._v("                        label: '日期',"),r("br"),e._v("                        width: 180"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'name',"),r("br"),e._v("                        label: '姓名',"),r("br"),e._v("                        width: 180"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'address',"),r("br"),e._v("                        label: '地址',"),r("br"),e._v("                    }"),r("br"),e._v("                ]"),r("br"),e._v("            }"),r("br"),e._v("        },"),r("br"),e._v("        methods: {"),r("br"),e._v("            toggleSelection(rows) {"),r("br"),e._v("                if (rows) {"),r("br"),e._v("                    rows.forEach(row => {"),r("br"),e._v("                        this.$refs.multipleTable.toggleRowSelection(row);"),r("br"),e._v("                    });"),r("br"),e._v("                } else {"),r("br"),e._v("                    this.$refs.multipleTable.clearSelection();"),r("br"),e._v("                }"),r("br"),e._v("            },"),r("br"),e._v("            handleSelectionChange(val) {"),r("br"),e._v("                this.multipleSelection = val;"),r("br"),e._v("            }"),r("br"),e._v("        }"),r("br"),r("br"),e._v("    }"),r("br"),e._v("<\/script>"),r("br")])],1)],1),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),r("ClientOnly",[r("CodeExample",{attrs:{title:"设置默认分页",description:"设置`currentPage`和`pageSize`改变初始的分页位置。"}},[r("DefaultPagination",{attrs:{slot:"example"},slot:"example"}),e._v(" "),r("div",{staticClass:"markdown-it-container__title"},[r("p",[e._v("可以通过"),r("code",[e._v("size-change")]),e._v("和"),r("code",[e._v("current-page-change")]),e._v("监听分页器事件，外层的"),r("code",[e._v("currentPage")]),e._v("和"),r("code",[e._v("pageSize")]),e._v("也会同步改变，行为完全类似"),r("code",[e._v("el-pagination")]),e._v("。\n实际上，底层就是"),r("code",[e._v("el-pagination")]),e._v("的"),r("code",[e._v("size-change")]),e._v("和"),r("code",[e._v("current-change")]),e._v("事件。")])]),r("div",{staticClass:"markdown-it-container__content"},[e._v("<template>"),r("br"),e._v("    <ve-table"),r("br"),e._v('        :data="tableData"'),r("br"),e._v('        :columns="columns"'),r("br"),e._v('        :current-page="pages.currentPage"'),r("br"),e._v('        :page-size="pages.pageSize"'),r("br"),e._v('        @current-page-change="handleCurrentPageChange"'),r("br"),e._v('        @size-change="handleSizeChange"></ve-table>'),r("br"),e._v("</template>"),r("br"),r("br"),e._v("<script>"),r("br"),e._v("    import Mock from 'mockjs';"),r("br"),r("br"),e._v("    export default {"),r("br"),e._v("        data() {"),r("br"),e._v("            return {"),r("br"),e._v("                pages: {"),r("br"),e._v("                    currentPage: 2,"),r("br"),e._v("                    pageSize: 20"),r("br"),e._v("                },"),r("br"),e._v("                tableData: (() =>"),r("br"),e._v("                    {"),r("br"),e._v("                        const data = [];"),r("br"),e._v("                        for (let i = 0; i < 50; i++) {"),r("br"),e._v("                            data.push(Mock.mock({"),r("br"),e._v("                                date: '@date',"),r("br"),e._v("                                name: '@cname',"),r("br"),e._v("                                address: '@county(true)'"),r("br"),e._v("                            }))"),r("br"),e._v("                        }"),r("br"),e._v("                        return data;"),r("br"),e._v("                    }"),r("br"),e._v("                )(),"),r("br"),e._v("                columns: ["),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'date',"),r("br"),e._v("                        label: '日期',"),r("br"),e._v("                        width: 180"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'name',"),r("br"),e._v("                        label: '姓名',"),r("br"),e._v("                        width: 180"),r("br"),e._v("                    },"),r("br"),e._v("                    {"),r("br"),e._v("                        prop: 'address',"),r("br"),e._v("                        label: '地址',"),r("br"),e._v("                    }"),r("br"),e._v("                ]"),r("br"),e._v("            }"),r("br"),e._v("        },"),r("br"),e._v("        methods: {"),r("br"),e._v("            handleSizeChange(size) {"),r("br"),e._v("                this.$message(`当前pageSize为${size}`);"),r("br"),e._v("            },"),r("br"),e._v("            handleCurrentPageChange(page) {"),r("br"),e._v("                this.$message(`当前currentPage为${page}`);"),r("br"),e._v("            }"),r("br"),e._v("        }"),r("br"),e._v("    }"),r("br"),e._v("<\/script>"),r("br")])],1)],1),e._v(" "),r("div",{staticClass:"warning custom-block"},[r("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),r("p",[e._v("由于"),r("a",{attrs:{href:"http://element-cn.eleme.io/2.0/#/zh-CN/component/pagination",target:"_blank",rel:"noopener noreferrer"}},[e._v("el-pagination"),r("OutboundLink")],1),e._v("的"),r("code",[e._v("current-change")]),e._v("事件，与"),r("a",{attrs:{href:"http://element-cn.eleme.io/2.0/#/zh-CN/component/table",target:"_blank",rel:"noopener noreferrer"}},[e._v("el-table"),r("OutboundLink")],1),e._v("的"),r("code",[e._v("current-change")]),e._v("事件重名了，因此"),r("code",[e._v("ve-element-table")]),e._v("为"),r("code",[e._v("el-pagination")]),e._v("的"),r("code",[e._v("current-change")]),e._v("\n事件取了一个别名，叫"),r("code",[e._v("current-page-change")]),e._v("。")])])],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"基础用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础用法","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础用法")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"渲染数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#渲染数据","aria-hidden":"true"}},[this._v("#")]),this._v(" 渲染数据")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"自动请求数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自动请求数据","aria-hidden":"true"}},[this._v("#")]),this._v(" 自动请求数据")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("ve-element-table")]),this._v("导出了"),t("code",[this._v("ve-table-sync")]),this._v("组件，用于自动向服务端请求。通过"),t("code",[this._v("http-request")]),this._v("属性传入一个请求函数，该函数会自动执行，\n然后渲染请求返回的数据。当分页切换时，该函数也会自动执行。")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),r("p",[r("code",[e._v("ve-table-sync")]),e._v("不同于"),r("code",[e._v("ve-table")]),e._v("组件。")]),e._v(" "),r("p",[r("code",[e._v("ve-table")]),e._v("的数据缓存在前端，"),r("code",[e._v("data")]),e._v("属性传入的数据即为全部数据，然后再根据"),r("code",[e._v("pageSize")]),e._v("和"),r("code",[e._v("currentPage")]),e._v("在"),r("code",[e._v("ve-table")]),e._v("内进行分页，并且根据传入数据的长度自动计算出"),r("code",[e._v("total")]),e._v("。")]),e._v(" "),r("p",[r("code",[e._v("ve-table-sync")]),e._v("向服务端请求数据，并且解析返回的结果。由于初始时不确定服务端数据的总数量，因此"),r("code",[e._v("total")]),e._v("属性可以不指定，待请求完成后再指定"),r("code",[e._v("total")]),e._v("以便分页器显示正确。\n由于数据由请求返回，因此"),r("code",[e._v("data")]),e._v("属性也不再需要，并且把返回的数据当做本次需要渲染的所有数据。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"传递prop给内置的el-table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传递prop给内置的el-table","aria-hidden":"true"}},[this._v("#")]),this._v(" 传递prop给内置的"),t("code",[this._v("el-table")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"设置分页"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置分页","aria-hidden":"true"}},[this._v("#")]),this._v(" 设置分页")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("ve-element-table")]),this._v("同样也代理了分页器的大部分属性，通过"),t("code",[this._v("currentPage")]),this._v("和"),t("code",[this._v("pageSize")]),this._v("设置默认的分页，并且监听分页器事件。")])}],!1,null,null,null);t.default=v.exports}}]);