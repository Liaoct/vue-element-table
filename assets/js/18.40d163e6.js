(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{342:function(e,t,n){"use strict";n.r(t);var v=n(1),_=Object(v.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("本库是基于"),n("a",{attrs:{href:"http://element-cn.eleme.io/2.0/#/zh-CN",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("element-ui")]),n("OutboundLink")],1),e._v("的封装，依赖于以下组件：")]),e._v(" "),e._m(2),e._v(" "),n("p",[n("a",{attrs:{href:"http://element-cn.eleme.io/2.0/#/zh-CN",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("element-ui")]),n("OutboundLink")],1),e._v("将Table和Pagination作为了两个独立组件，让用户自己去控制两者之间的联动，这样确实带来了更多的灵活性。但是，\n在绝大多数业务场景中，都只是简单的数据展示与分页，这让我们在这些情况下一直在重复大量的代码。")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),n("p",[e._v("本库参考"),n("a",{attrs:{href:"https://github.com/njleonzhang/vue-data-tables",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-data-tables"),n("OutboundLink")],1),e._v("实现，感谢作者"),n("a",{attrs:{href:"https://github.com/njleonzhang",target:"_blank",rel:"noopener noreferrer"}},[e._v("leon zhang"),n("OutboundLink")],1),e._v("。本库与"),n("code",[e._v("vue-data-tables")]),e._v("的不同之处是，\n"),n("code",[e._v("ve-element-table")]),e._v("更加简单易用，属于"),n("code",[e._v("el-table")]),e._v("的高阶组件，和原生"),n("code",[e._v("el-table")]),e._v("与"),n("code",[e._v("el-pagination")]),e._v("用法几乎一样，然后在此基础上额外扩展的\n自动分页、自动请求数据等功能。")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"ve-element-table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ve-element-table","aria-hidden":"true"}},[this._v("#")]),this._v(" ve-element-table")])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("基于Element-ui 2.x的一个易用的、可自定义的、带分页功能的Table组件。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("el-table")]),this._v(" "),t("li",[this._v("el-table-column")]),this._v(" "),t("li",[this._v("el-button")]),this._v(" "),t("li",[this._v("el-pagination")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("本库的目的在于简化Table和Pagination的使用，提供"),n("strong",[e._v("自动分页")]),e._v("、"),n("strong",[e._v("快捷生成数据列")]),e._v("、"),n("strong",[e._v("快捷生成动作列")]),e._v("、"),n("strong",[e._v("自动发起请求")]),e._v("、"),n("strong",[e._v("分页与后端服务联动")]),e._v("等功能。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("本库导出了3个组件"),n("code",[e._v("ve-table")]),e._v("、"),n("code",[e._v("ve-tree-table")]),e._v("和"),n("code",[e._v("ve-table-sync")]),e._v("。在一些业务场景中，数据列表缓存在前台，此时数据分页与过滤均发生在前台，"),n("code",[e._v("ve-table")]),e._v("就适用于这种场景，\n它只是"),n("code",[e._v("el-table")]),e._v("和"),n("code",[e._v("el-pagination")]),e._v("的简单合并。在另外一些场景中，数据量较大，数据分页及过滤发生在后端，此时"),n("code",[e._v("ve-table-sync")]),e._v("适用于这种场景。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),n("p",[e._v("Element-ui 2.6.以上，已经原生支持树形数据及懒加载，所以"),n("code",[e._v("ve-tree-table")]),e._v("将不再维护。")]),e._v(" "),n("p",[e._v("如没有特殊说明，后文中的"),n("code",[e._v("ve-element-table")]),e._v("统值"),n("code",[e._v("ve-table")]),e._v("和"),n("code",[e._v("ve-table-sync")]),e._v("。")])])}],!1,null,null,null);t.default=_.exports}}]);